import '../transfer_request_screen/widgets/userprofile1_item_widget.dart';import 'bloc/transfer_request_bloc.dart';import 'models/transfer_request_model.dart';import 'models/userprofile1_item_model.dart';import 'package:flutter/material.dart';import 'package:kiamis_app/core/app_export.dart';import 'package:kiamis_app/widgets/app_bar/appbar_iconbutton.dart';import 'package:kiamis_app/widgets/app_bar/appbar_iconbutton_2.dart';import 'package:kiamis_app/widgets/app_bar/appbar_subtitle_2.dart';import 'package:kiamis_app/widgets/app_bar/custom_app_bar.dart';import 'package:kiamis_app/widgets/custom_elevated_button.dart';import 'package:kiamis_app/widgets/custom_icon_button.dart';import 'package:kiamis_app/widgets/custom_search_view.dart';class TransferRequestScreen extends StatelessWidget {const TransferRequestScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<TransferRequestBloc>(create: (context) => TransferRequestBloc(TransferRequestState(transferRequestModelObj: TransferRequestModel()))..add(TransferRequestInitialEvent()), child: TransferRequestScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: 49.v, leadingWidth: 59.h, leading: AppbarIconbutton(svgPath: ImageConstant.imgArrowleftBlack900, margin: EdgeInsets.only(left: 24.h, top: 7.v, bottom: 7.v), onTap: () {onTapArrowleftone(context);}), centerTitle: true, title: AppbarSubtitle2(text: "msg_transfer_request".tr), actions: [AppbarIconbutton2(svgPath: ImageConstant.imgVolumeBlack900, margin: EdgeInsets.symmetric(horizontal: 24.h, vertical: 7.v))]), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 24.h, vertical: 25.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [CustomElevatedButton(height: 40.v, width: 125.h, text: "lbl_transfer".tr, leftIcon: Container(margin: EdgeInsets.only(right: 8.h), child: CustomImageView(svgPath: ImageConstant.imgFrame244)), buttonStyle: CustomButtonStyles.fillDeepPurple, buttonTextStyle: CustomTextStyles.titleSmallWhiteA700), CustomElevatedButton(height: 40.v, width: 125.h, text: "lbl_request".tr, leftIcon: Container(margin: EdgeInsets.only(right: 7.h), child: CustomImageView(svgPath: ImageConstant.imgFrame245)), buttonStyle: CustomButtonStyles.fillTeal, buttonTextStyle: CustomTextStyles.titleSmallWhiteA700), CustomIconButton(height: 40.adaptSize, width: 40.adaptSize, padding: EdgeInsets.all(10.h), decoration: IconButtonStyleHelper.fillGrayTL7, child: CustomImageView(svgPath: ImageConstant.imgMore))]), SizedBox(height: 20.v), BlocSelector<TransferRequestBloc, TransferRequestState, TextEditingController?>(selector: (state) => state.searchController, builder: (context, searchController) {return CustomSearchView(controller: searchController, hintText: "msg_search_people".tr, prefix: Container(margin: EdgeInsets.fromLTRB(21.h, 18.v, 15.h, 17.v), child: CustomImageView(svgPath: ImageConstant.imgSearchGray500)), prefixConstraints: BoxConstraints(maxHeight: 50.v), suffix: Padding(padding: EdgeInsets.only(right: 15.h), child: IconButton(onPressed: () {searchController!.clear();}, icon: Icon(Icons.clear, color: Colors.grey.shade600))), contentPadding: EdgeInsets.only(top: 14.v, right: 30.h, bottom: 14.v));}), SizedBox(height: 26.v), Text("lbl_contact_people".tr, style: CustomTextStyles.titleMediumBlack900SemiBold), SizedBox(height: 13.v), Expanded(child: BlocSelector<TransferRequestBloc, TransferRequestState, TransferRequestModel?>(selector: (state) => state.transferRequestModelObj, builder: (context, transferRequestModelObj) {return ListView.separated(physics: BouncingScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: 16.v);}, itemCount: transferRequestModelObj?.userprofile1ItemList.length ?? 0, itemBuilder: (context, index) {Userprofile1ItemModel model = transferRequestModelObj?.userprofile1ItemList[index] ?? Userprofile1ItemModel(); return Userprofile1ItemWidget(model);});}))])))); } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapArrowleftone(BuildContext context) { NavigatorService.goBack(); } 
 }
